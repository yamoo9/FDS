{"version":3,"sources":["es6/es6-test.js","es6/es6.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["\n\nconst es6Fn = ()=> {\n  if (message) {\n    let message = 'this is es6.';\n  } else {\n    console.log('`message` is not defined');\n  }\n};\n","/*! ECMAScript2015(ES6).js © yamoo9.net, 2017 */\n\n// - [Babel](http://babeljs.io/)\n// - [ES6 호환성 테이블](http://kangax.github.io/compat-table/es6/)\n// - [ECMAScript 2015 (ES6)](https://github.com/yamoo9/FDS/blob/3rd_FDS/REFERENCES/ECMAScript2015.md)\n// - [Airbnb JavaScript 스타일 가이드](https://github.com/tipjs/javascript-style-guide)\n// - [ESDoc: 문서화 도구](https://esdoc.org/)\n\n\n////////////////\n// let, const //\n////////////////\n\n// let, const 키워드로 선언된 변수,상수는 블록 스코프(Block Scope)를 가진다.\n// let, const 키워드로 선언된 변수,상수는 스코프 최상단으로 호이스팅(끌어올림)되지 않는다.\n// IIFE 패턴을 사용하여 함수 스코프를 사용하지 않아도, 지역 변수를 생성할 수 있다.\n\n// 기존 ES5 코드 환경에서는 var 키워드를 남겨두는 것이 좋다.\n// ECMAScript2015+ 환경에서는 var 보다는 let, const 키워드 사용을 권장한다.\n// https://github.com/tipjs/javascript-style-guide#2.1\n\n// 강제적으로 변하지 않게(Force Immutability) 하고자 할 경우, Object.freeze()를 사용한다.\n\n\n\n\n////////////////////////\n// String Additions   //\n////////////////////////\n// string.includes()  //\n// string.startWith() //\n// string.endWith()   //\n// string.repeat()    //\n////////////////////////\n\n// < e.g) 1: AudioCtrl.hasSign() >\n\n\n// < e.g) 2: Comment(-=-= . =-=-, =>=>=> . <=<=<=) >\n\n\n\n\n//////////////////////\n// Array Additions  //\n//////////////////////\n// array.find()     //\n// array.includes() //\n// array.fill()     //\n// array.keys()     //\n// array.values()   //\n// array.entries()  //\n//////////////////////\n\n\n\n\n//////////////////////\n// Template Strings //\n//////////////////////\n\n// 이스케이프(Escape) 문자열 처리 해결\n// < e.g) audio_control_demo.js >\n\n// 보간법(Interpolation) 활용 가능 (Like Sass)\n// HTML 템플릿(Template) 작성에 탁월!\n// Vue JS 프레임워크에서 유용하게 활용하게 됨.\n\n\n\n\n////////////////////\n// Arrow Function //\n////////////////////\n\n// JavaScript 함수 내부에서 this 참조는 실행 시에 동적으로 변경된다.\n// 이로 인해 의도치 않은 실수가 발생할 수 있는데 화살표 함수를 사용하면 this 참조가\n// 문맥으로 유지되기 때문에 실수를 미연에 방지할 수 있다.\n\n\n\n\n////////////////////////\n// Default Parameters //\n////////////////////////\n\n// 함수 매개변수 초기 값을 설정할 수 있다. (Like Sass)\n// 함수 매개변수 값을 외부의 함수 결과 값으로 처리할 수도 있다.\n// < e.g) defaultDiscount() >\n\n\n\n\n///////////////////////////////\n// Rest or Spread Parameters //\n///////////////////////////////\n\n// 나머지(rest) ------------------------------------------------------------------\n// 함수 정의 시, 매개변수 값 앞에 ...을 붙이는 경우\n\n// < e.g) sum() >\n\n// Array.prototype.reduce\n// [].reduce(function(이전값,현재값){},초기값);\n// https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\n\n\n// 펼치다(spread) ----------------------------------------------------------------\n// 함수 실행 시, 전달인자 앞에 ...을 붙이는 경우\n\n// 배열 ➤ 개별 값 변경 처리\n// []  ➤ ...numbers\n\n\n\n\n/////////////////////////\n// Object Enhancements //\n/////////////////////////\n\n// < e.g) 1 >\nfunction getPerson() {\n  let name = 'Hoon';\n  let job  = 'Instructor';\n  return {\n    name: name,\n    job: job,\n    greeting: function(you) {\n      let message = 'Hello, ' + you + '.';\n      message += ' My Name is ' + this.name + ' and My Job is ' + this.job;\n      return message;\n    }\n  };\n}\n\n// console.log( getPerson().name );\n// console.log( getPerson().greeting('Hey Min') );\n\n\n\n\n///////////////////////////\n// Classes & Inheritance //\n///////////////////////////\n\n// < e.g) 1: 생성자 함수 ➤ 클래스 문법 활용 >\n\n// class\n// constructor\n// static\n// get\n// set\n// extends\n// super\n\nfunction User(name, email) {\n  this.name = name;\n  this.email = email;\n}\n\nUser.register = function(name, email) {\n  return new User(name, email);\n};\n\nUser.prototype.changeEmail = function(new_mail) {\n  this.email = new_mail;\n};\n\n// < e.g) 2: AudioCtrl 생성자 함수 ➤ 클래스 문법 활용 >\n\n\n// User\n// users = [ new User, new User, new User ]\n// users.find(user=>user.isAdmin).name\n\n\n\n\n////////////////////////////\n// ECMAScript2015 Modules //\n////////////////////////////\n\n// CommonJS ----------------------------------------------------------------------\n// http://www.commonjs.org/\nmodule.exports = {};\n\n// AMD ---------------------------------------------------------------------------\n// http://requirejs.org/docs/whyamd.html#amd\n// https://addyosmani.com/resources/essentialjsdesignpatterns/book/#modularjavascript\ndefine('module',[],function(){});\n\n// UMD ---------------------------------------------------------------------------\n// https://github.com/umdjs/umd\n// https://github.com/umdjs/umd/blob/master/templates/jqueryPlugin.js\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n    } else if (typeof module === 'object' && module.exports) {\n        // Node/CommonJS\n    } else {\n        // Browser globals\n    }\n}(function(){}));\n\n// ES2015\n// include ~ from\n// export\n// defaults\n\n// export let module_prop = '';\n// export fn = function() {};\n// export class ClassName {};\n// export default ClassName;\n\n\n\n\n///////////////////\n// Destructuring //\n///////////////////\n\n// < e.g) 1: 블록 스코프 내에서 디스트럭쳐링 활용 >\nlet product = {\n  name           : 'TV',\n  maker          : 'LG',\n  features       : [ 'Time Recoding', 'Sharing Screen', 'Speech Recognition' ],\n  productionYear : 2017\n};\n\n{\n  let name           = product.name;\n  let maker          = product.maker;\n  let features       = product.features;\n  let productionYear = product.productionYear;\n}\n\n// < e.g) 2: 함수 매개변수에 디스트럭쳐링 활용 >\nfunction greet(person) {\n  let name    = person.name;\n  let message = person.message;\n  return 'Hi! I\\'m ' + name + '. Today is ' + message;\n}\n\ngreet({\n  name: 'Jin Ho',\n  age: 22,\n  results: [ 'phone', 'notebook' ],\n  count: 31,\n  message: 'Good Day! :-)'\n});\n\n// < e.g) 3: 모듈 로드 시, 필요한 모듈 속성만 디스트럭쳐링 활용 >\n// import { 속성1, 속성2 } from '모듈'\n\n\n\n\n//////////////////////////////////\n// Module Bundling with Webpack //\n//////////////////////////////////\n\n// webpack.md 참고\n\n\n\n\n/////////////\n// Promise //\n/////////////\n\n\n\n// --------------------------------------------------------------\n\n// axios는 프로미스 기반 Ajax 라이브러리\nlet promise = axios.get('/employees');\npromise.then(function(data) {});\npromise.catch(function(error) {});\n\n\n\n\n//////////\n// Sets //\n//////////\n\n// new Set()\n// .add\n// .has\n// .delete\n// .clear\n// .size\n// .values\n// .forEach\n// [...(new Set('css', 'javascript', 'vue'))].filter(item=>item.length===3);\n\n\n\n\n////////////////\n// Generators //\n////////////////\n\n\n"]}