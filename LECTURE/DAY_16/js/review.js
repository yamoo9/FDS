/*! review.js © yamoo9.net, 2017 */

/**
 *  JavaScript Core Syntax
 *
 *  Dot Syntax
 *  문장의 끝에 세미콜론(;) 삽입
 *
 *  변수(variable) 이름 규칙
 *    - 첫글자로 숫자가 오면 안된다.
 *    - 특수문자는 _, $ 만 허용된다.
 *    - 이름 사이에 공백이 오면 안된다.
 *    - 대문자는 사용가능하지만, 모두 대문자로 작성하지 않는다. (상수와 구분)
 *  상수(constant)
 *    - 이름 관례가 모두 대문자인 점을 제외하고는, 변수와 같다.
 *
 *  연산자
 *  산술(사칙)연산: 숫자와 숫자 사이의 계산 처리 +, -, *, /, %
 *  문자열 접합: 문자와 문자 사이 또는 숫자와 문자 사이에 + 기호를 사용하면 접합(용접)
 *  대입 연산자: =, +=, -=, *=, /=, %=
 *  증가(감소) 연산자: ++, --
 *  선/후 증가(감소)
 *
 *  변수에 값을 참조하거나, 복사하거나
 *
 *  복사되는 데이터 유형 (원시 데이터 유형)
 *  - 숫자 유형
 *  - 문자 유형
 *  - 불리언 유형
 *  - null
 *  - undefined
 *
 *  참조란?
 *  - 하나의 대상을 참조하는 각기 다른 변수는 다른 하나의 변수에 적용된 처리에 의해 대상이 변경되었을 때
 *    다른 변수 또한 변경된 대상을 참조하고 있기 때문에 변경된 값이 확인된다.
 *
 *  undefined 경우
 *  - 변수를 선언만 한 경우 기본 값이 undefined
 *  - 함수에서 명시적으로 return 을 하지 않았을 경우, 함수는 undefined 반환
 *
 *  null 경우
 *  - 문서 객체를 찾으려 했으나, 대상이 존재하지 않을 경우 null 반환
 *  - 문서 객체의 이벤트 속성의 초기 값은 null
 *  - 연결된 이벤트 핸들러(function)를 제거하고 null을 대입하면 이벤트 연결 해제
 *
 *  형 변환
 *
 *  숫자 -> 문자
 *  '숫자'
 *  숫자 + ''
 *  String(숫자)
 *  숫자.toString()
 *
 *  문자(숫자형) -> 숫자
 *  문자(숫자형) - 0
 *  문자(숫자형) * 1
 *  문자(숫자형) / 1
 *  문자(숫자형) % 1
 *  +문자(숫자형)
 *  Number(문자(숫자형))
 *
 *  단위(px, em, rem, vw, vh, vmin, vmax, fr)가 붙은 문자
 *  단위를 제거하고 숫자를 반환하는 내장 함수
 *  window.parseInt(단위문자, 10) -> 정수(Integer)
 *  window.parseFloat(단위문자, 10) -> 실수(Float): 소수점까지 반환
 *
 *  자바스크립트 데이터 유형
 *  - 숫자
 *  - 문자
 *  - 불리언
 *  - null
 *  - undefined
 *  - 함수
 *  - 배열
 *  - 객체
 */
